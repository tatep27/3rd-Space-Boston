{"ast":null,"code":"import spacesData from '../data/spaces.json';\nexport const getAllSpaces = () => {\n  return spacesData;\n};\nexport const filterSpaces = (spaces, filters) => {\n  return spaces.filter(space => {\n    // Text search\n    if (filters.search) {\n      const searchLower = filters.search.toLowerCase();\n      const matchesSearch = space.name.toLowerCase().includes(searchLower) || space.neighborhood.toLowerCase().includes(searchLower) || space.type.toLowerCase().includes(searchLower) || space.description.toLowerCase().includes(searchLower);\n      if (!matchesSearch) return false;\n    }\n\n    // Capacity filter\n    if (filters.capacity) {\n      const capacity = space.capacity;\n      switch (filters.capacity) {\n        case '5-15':\n          if (!capacity.includes('5') && !capacity.includes('8') && !capacity.includes('10') && !capacity.includes('12')) {\n            return false;\n          }\n          break;\n        case '15-30':\n          if (!capacity.includes('15') && !capacity.includes('20') && !capacity.includes('25')) {\n            return false;\n          }\n          break;\n        case '30+':\n          if (!capacity.includes('30') && !capacity.includes('35')) {\n            return false;\n          }\n          break;\n      }\n    }\n\n    // Time of day filter\n    if (filters.timeOfDay) {\n      const available = space.available.toLowerCase();\n      switch (filters.timeOfDay) {\n        case 'Morning':\n          if (!available.includes('morning') && !available.includes('am')) {\n            return false;\n          }\n          break;\n        case 'Afternoon':\n          if (!available.includes('afternoon') && !available.includes('pm') && !available.includes('1–5')) {\n            return false;\n          }\n          break;\n        case 'Evening':\n          if (!available.includes('evening') && !available.includes('6–') && !available.includes('7–')) {\n            return false;\n          }\n          break;\n      }\n    }\n\n    // Type filter\n    if (filters.type && filters.type !== 'All') {\n      if (space.type !== filters.type) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\nexport const getSpaceById = id => {\n  return spacesData.find(space => space.id === id);\n};","map":{"version":3,"names":["spacesData","getAllSpaces","filterSpaces","spaces","filters","filter","space","search","searchLower","toLowerCase","matchesSearch","name","includes","neighborhood","type","description","capacity","timeOfDay","available","getSpaceById","id","find"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/services/spacesService.ts"],"sourcesContent":["import { Space, FilterOptions } from '../types';\nimport spacesData from '../data/spaces.json';\n\nexport const getAllSpaces = (): Space[] => {\n  return spacesData as Space[];\n};\n\nexport const filterSpaces = (spaces: Space[], filters: FilterOptions): Space[] => {\n  return spaces.filter(space => {\n    // Text search\n    if (filters.search) {\n      const searchLower = filters.search.toLowerCase();\n      const matchesSearch = \n        space.name.toLowerCase().includes(searchLower) ||\n        space.neighborhood.toLowerCase().includes(searchLower) ||\n        space.type.toLowerCase().includes(searchLower) ||\n        space.description.toLowerCase().includes(searchLower);\n      \n      if (!matchesSearch) return false;\n    }\n\n    // Capacity filter\n    if (filters.capacity) {\n      const capacity = space.capacity;\n      switch (filters.capacity) {\n        case '5-15':\n          if (!capacity.includes('5') && !capacity.includes('8') && !capacity.includes('10') && !capacity.includes('12')) {\n            return false;\n          }\n          break;\n        case '15-30':\n          if (!capacity.includes('15') && !capacity.includes('20') && !capacity.includes('25')) {\n            return false;\n          }\n          break;\n        case '30+':\n          if (!capacity.includes('30') && !capacity.includes('35')) {\n            return false;\n          }\n          break;\n      }\n    }\n\n    // Time of day filter\n    if (filters.timeOfDay) {\n      const available = space.available.toLowerCase();\n      switch (filters.timeOfDay) {\n        case 'Morning':\n          if (!available.includes('morning') && !available.includes('am')) {\n            return false;\n          }\n          break;\n        case 'Afternoon':\n          if (!available.includes('afternoon') && !available.includes('pm') && !available.includes('1–5')) {\n            return false;\n          }\n          break;\n        case 'Evening':\n          if (!available.includes('evening') && !available.includes('6–') && !available.includes('7–')) {\n            return false;\n          }\n          break;\n      }\n    }\n\n    // Type filter\n    if (filters.type && filters.type !== 'All') {\n      if (space.type !== filters.type) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nexport const getSpaceById = (id: number): Space | undefined => {\n  return spacesData.find(space => space.id === id) as Space | undefined;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}