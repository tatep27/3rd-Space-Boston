{"ast":null,"code":"var _jsxFileName = \"/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindACommunityScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommunityMapView from '../components/CommunityMapView';\nimport CommunitySearchBar from '../components/CommunitySearchBar';\nimport CommunityList from '../components/CommunityList';\nimport { getAllCommunities, filterCommunities } from '../services/communitiesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindACommunityScreen = () => {\n  _s();\n  const [communities, setCommunities] = useState([]);\n  const [filteredCommunities, setFilteredCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: '',\n    isOpenToNewMembers: false\n  });\n  useEffect(() => {\n    const allCommunities = getAllCommunities();\n    setCommunities(allCommunities);\n    setFilteredCommunities(allCommunities);\n  }, []);\n  useEffect(() => {\n    const filtered = filterCommunities(communities, filters);\n    setFilteredCommunities(filtered);\n  }, [communities, filters]);\n  const handleCommunitySelect = community => {\n    setSelectedCommunity(community);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommunitySearchBar, {\n      filters: filters,\n      onFiltersChange: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 400px',\n        gap: '24px',\n        alignItems: 'start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommunityMapView, {\n          communities: filteredCommunities,\n          selectedCommunity: selectedCommunity,\n          onCommunitySelect: handleCommunitySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommunityList, {\n          communities: filteredCommunities,\n          selectedCommunity: selectedCommunity,\n          onCommunitySelect: handleCommunitySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FindACommunityScreen, \"lKApDK/F0AxjhMLL0JQXmaRNvZU=\");\n_c = FindACommunityScreen;\nexport default FindACommunityScreen;\nvar _c;\n$RefreshReg$(_c, \"FindACommunityScreen\");","map":{"version":3,"names":["React","useState","useEffect","CommunityMapView","CommunitySearchBar","CommunityList","getAllCommunities","filterCommunities","jsxDEV","_jsxDEV","FindACommunityScreen","_s","communities","setCommunities","filteredCommunities","setFilteredCommunities","selectedCommunity","setSelectedCommunity","filters","setFilters","search","type","isOpenToNewMembers","allCommunities","filtered","handleCommunitySelect","community","children","onFiltersChange","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","alignItems","onCommunitySelect","_c","$RefreshReg$"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindACommunityScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CommunityMapView from '../components/CommunityMapView';\nimport CommunityCard from '../components/CommunityCard';\nimport CommunitySearchBar from '../components/CommunitySearchBar';\nimport CommunityList from '../components/CommunityList';\nimport { getAllCommunities, filterCommunities } from '../services/communitiesService';\nimport { Community } from '../types';\n\nconst FindACommunityScreen: React.FC = () => {\n  const [communities, setCommunities] = useState<Community[]>([]);\n  const [filteredCommunities, setFilteredCommunities] = useState<Community[]>([]);\n  const [selectedCommunity, setSelectedCommunity] = useState<Community | null>(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: '',\n    isOpenToNewMembers: false,\n  });\n\n  useEffect(() => {\n    const allCommunities = getAllCommunities();\n    setCommunities(allCommunities);\n    setFilteredCommunities(allCommunities);\n  }, []);\n\n  useEffect(() => {\n    const filtered = filterCommunities(communities, filters);\n    setFilteredCommunities(filtered);\n  }, [communities, filters]);\n\n  const handleCommunitySelect = (community: Community) => {\n    setSelectedCommunity(community);\n  };\n\n  return (\n    <div>\n      {/* Search and Filters */}\n        <CommunitySearchBar filters={filters} onFiltersChange={setFilters} />\n\n        {/* Main Content */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: '1fr 400px',\n          gap: '24px',\n          alignItems: 'start',\n        }}>\n          {/* Map */}\n          <div>\n            <CommunityMapView\n              communities={filteredCommunities}\n              selectedCommunity={selectedCommunity}\n              onCommunitySelect={handleCommunitySelect}\n            />\n          </div>\n\n          {/* Community List */}\n          <div>\n            <CommunityList\n              communities={filteredCommunities}\n              selectedCommunity={selectedCommunity}\n              onCommunitySelect={handleCommunitySelect}\n            />\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default FindACommunityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}