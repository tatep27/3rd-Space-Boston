{"ast":null,"code":"var _jsxFileName = \"/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindASpaceScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapView from '../components/MapView';\nimport SearchBar from '../components/SearchBar';\nimport SpaceList from '../components/SpaceList';\nimport SpaceModal from '../components/SpaceModal';\nimport { getAllSpaces, filterSpaces } from '../services/spacesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindASpaceScreen = () => {\n  _s();\n  const [spaces, setSpaces] = useState([]);\n  const [filteredSpaces, setFilteredSpaces] = useState([]);\n  const [selectedSpace, setSelectedSpace] = useState(null);\n  const [modalSpace, setModalSpace] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    search: '',\n    capacity: '',\n    timeOfDay: '',\n    type: ''\n  });\n  useEffect(() => {\n    const allSpaces = getAllSpaces();\n    setSpaces(allSpaces);\n    setFilteredSpaces(allSpaces);\n  }, []);\n  useEffect(() => {\n    const filtered = filterSpaces(spaces, filters);\n    setFilteredSpaces(filtered);\n  }, [spaces, filters]);\n  const handleSpaceSelect = space => {\n    setSelectedSpace(space);\n    setModalSpace(space);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setModalSpace(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      filters: filters,\n      onFiltersChange: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 400px',\n        gap: '24px',\n        alignItems: 'start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MapView, {\n          spaces: filteredSpaces,\n          selectedSpace: selectedSpace,\n          onSpaceSelect: handleSpaceSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SpaceList, {\n          spaces: filteredSpaces,\n          selectedSpace: selectedSpace,\n          onSpaceSelect: handleSpaceSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SpaceModal, {\n      space: modalSpace,\n      isOpen: isModalOpen,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FindASpaceScreen, \"Nkm9tFvRER9AZK+1hqxXBaUrPak=\");\n_c = FindASpaceScreen;\nexport default FindASpaceScreen;\nvar _c;\n$RefreshReg$(_c, \"FindASpaceScreen\");","map":{"version":3,"names":["React","useState","useEffect","MapView","SearchBar","SpaceList","SpaceModal","getAllSpaces","filterSpaces","jsxDEV","_jsxDEV","FindASpaceScreen","_s","spaces","setSpaces","filteredSpaces","setFilteredSpaces","selectedSpace","setSelectedSpace","modalSpace","setModalSpace","isModalOpen","setIsModalOpen","filters","setFilters","search","capacity","timeOfDay","type","allSpaces","filtered","handleSpaceSelect","space","handleCloseModal","children","onFiltersChange","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","alignItems","onSpaceSelect","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindASpaceScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapView from '../components/MapView';\nimport SpaceCard from '../components/SpaceCard';\nimport SearchBar from '../components/SearchBar';\nimport SpaceList from '../components/SpaceList';\nimport SpaceModal from '../components/SpaceModal';\nimport { getAllSpaces, filterSpaces } from '../services/spacesService';\nimport { Space, FilterOptions } from '../types';\n\nconst FindASpaceScreen: React.FC = () => {\n  const [spaces, setSpaces] = useState<Space[]>([]);\n  const [filteredSpaces, setFilteredSpaces] = useState<Space[]>([]);\n  const [selectedSpace, setSelectedSpace] = useState<Space | null>(null);\n  const [modalSpace, setModalSpace] = useState<Space | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [filters, setFilters] = useState<FilterOptions>({\n    search: '',\n    capacity: '',\n    timeOfDay: '',\n    type: '',\n  });\n\n  useEffect(() => {\n    const allSpaces = getAllSpaces();\n    setSpaces(allSpaces);\n    setFilteredSpaces(allSpaces);\n  }, []);\n\n  useEffect(() => {\n    const filtered = filterSpaces(spaces, filters);\n    setFilteredSpaces(filtered);\n  }, [spaces, filters]);\n\n  const handleSpaceSelect = (space: Space) => {\n    setSelectedSpace(space);\n    setModalSpace(space);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setModalSpace(null);\n  };\n\n  return (\n    <div>\n      {/* Search and Filters */}\n        <SearchBar filters={filters} onFiltersChange={setFilters} />\n\n        {/* Main Content */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: '1fr 400px',\n          gap: '24px',\n          alignItems: 'start',\n        }}>\n          {/* Map */}\n          <div>\n            <MapView\n              spaces={filteredSpaces}\n              selectedSpace={selectedSpace}\n              onSpaceSelect={handleSpaceSelect}\n            />\n          </div>\n\n          {/* Space List */}\n          <div>\n            <SpaceList\n              spaces={filteredSpaces}\n              selectedSpace={selectedSpace}\n              onSpaceSelect={handleSpaceSelect}\n            />\n          </div>\n        </div>\n\n        {/* Modal */}\n        <SpaceModal\n          space={modalSpace}\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n        />\n    </div>\n  );\n};\n\nexport default FindASpaceScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}