{"ast":null,"code":"import communitiesData from'../data/communities.json';export const getAllCommunities=()=>{return communitiesData;};export const filterCommunities=(communities,filters)=>{return communities.filter(community=>{const matchesSearch=!filters.search||community.name.toLowerCase().includes(filters.search.toLowerCase())||community.description.toLowerCase().includes(filters.search.toLowerCase())||community.spaceName.toLowerCase().includes(filters.search.toLowerCase());const matchesType=!filters.type||community.type===filters.type;const matchesOpenMembers=!filters.isOpenToNewMembers||community.isOpenToNewMembers;return matchesSearch&&matchesType&&matchesOpenMembers;});};export const getCommunityById=id=>{return communitiesData.find(community=>community.id===id);};","map":{"version":3,"names":["communitiesData","getAllCommunities","filterCommunities","communities","filters","filter","community","matchesSearch","search","name","toLowerCase","includes","description","spaceName","matchesType","type","matchesOpenMembers","isOpenToNewMembers","getCommunityById","id","find"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/services/communitiesService.ts"],"sourcesContent":["import communitiesData from '../data/communities.json';\nimport { Community } from '../types';\n\nexport const getAllCommunities = (): Community[] => {\n  return communitiesData as Community[];\n};\n\nexport const filterCommunities = (communities: Community[], filters: {\n  search: string;\n  type: string;\n  isOpenToNewMembers: boolean;\n}): Community[] => {\n  return communities.filter(community => {\n    const matchesSearch = !filters.search || \n      community.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n      community.description.toLowerCase().includes(filters.search.toLowerCase()) ||\n      community.spaceName.toLowerCase().includes(filters.search.toLowerCase());\n    \n    const matchesType = !filters.type || community.type === filters.type;\n    \n    const matchesOpenMembers = !filters.isOpenToNewMembers || community.isOpenToNewMembers;\n    \n    return matchesSearch && matchesType && matchesOpenMembers;\n  });\n};\n\nexport const getCommunityById = (id: number): Community | undefined => {\n  return communitiesData.find(community => community.id === id) as Community;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,eAAe,KAAM,0BAA0B,CAGtD,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAmB,CAClD,MAAO,CAAAD,eAAe,CACxB,CAAC,CAED,MAAO,MAAM,CAAAE,iBAAiB,CAAGA,CAACC,WAAwB,CAAEC,OAI3D,GAAkB,CACjB,MAAO,CAAAD,WAAW,CAACE,MAAM,CAACC,SAAS,EAAI,CACrC,KAAM,CAAAC,aAAa,CAAG,CAACH,OAAO,CAACI,MAAM,EACnCF,SAAS,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,EACnEJ,SAAS,CAACM,WAAW,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,EAC1EJ,SAAS,CAACO,SAAS,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAE1E,KAAM,CAAAI,WAAW,CAAG,CAACV,OAAO,CAACW,IAAI,EAAIT,SAAS,CAACS,IAAI,GAAKX,OAAO,CAACW,IAAI,CAEpE,KAAM,CAAAC,kBAAkB,CAAG,CAACZ,OAAO,CAACa,kBAAkB,EAAIX,SAAS,CAACW,kBAAkB,CAEtF,MAAO,CAAAV,aAAa,EAAIO,WAAW,EAAIE,kBAAkB,CAC3D,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAIC,EAAU,EAA4B,CACrE,MAAO,CAAAnB,eAAe,CAACoB,IAAI,CAACd,SAAS,EAAIA,SAAS,CAACa,EAAE,GAAKA,EAAE,CAAC,CAC/D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}