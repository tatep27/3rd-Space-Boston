{"ast":null,"code":"import React,{useState,useEffect}from'react';import EventSearchBar from'../components/EventSearchBar';import EventList from'../components/EventList';import{getAllEvents,filterEvents,sortEventsByDate}from'../services/eventsService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FindAnEventScreen=()=>{const[events,setEvents]=useState([]);const[filteredEvents,setFilteredEvents]=useState([]);const[filters,setFilters]=useState({search:'',communityType:'',isOpenToPublic:false,cost:''});useEffect(()=>{const allEvents=getAllEvents();const sortedEvents=sortEventsByDate(allEvents);setEvents(sortedEvents);setFilteredEvents(sortedEvents);},[]);useEffect(()=>{const filtered=filterEvents(events,filters);const sortedFiltered=sortEventsByDate(filtered);setFilteredEvents(sortedFiltered);},[events,filters]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(EventSearchBar,{filters:filters,onFiltersChange:setFilters}),/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'800px',margin:'0 auto'},children:/*#__PURE__*/_jsx(EventList,{events:filteredEvents})})]});};export default FindAnEventScreen;","map":{"version":3,"names":["React","useState","useEffect","EventSearchBar","EventList","getAllEvents","filterEvents","sortEventsByDate","jsx","_jsx","jsxs","_jsxs","FindAnEventScreen","events","setEvents","filteredEvents","setFilteredEvents","filters","setFilters","search","communityType","isOpenToPublic","cost","allEvents","sortedEvents","filtered","sortedFiltered","children","onFiltersChange","style","maxWidth","margin"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindAnEventScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EventSearchBar from '../components/EventSearchBar';\nimport EventList from '../components/EventList';\nimport { getAllEvents, filterEvents, sortEventsByDate } from '../services/eventsService';\nimport { Event } from '../types';\n\nconst FindAnEventScreen: React.FC = () => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [filteredEvents, setFilteredEvents] = useState<Event[]>([]);\n  const [filters, setFilters] = useState({\n    search: '',\n    communityType: '',\n    isOpenToPublic: false,\n    cost: '',\n  });\n\n  useEffect(() => {\n    const allEvents = getAllEvents();\n    const sortedEvents = sortEventsByDate(allEvents);\n    setEvents(sortedEvents);\n    setFilteredEvents(sortedEvents);\n  }, []);\n\n  useEffect(() => {\n    const filtered = filterEvents(events, filters);\n    const sortedFiltered = sortEventsByDate(filtered);\n    setFilteredEvents(sortedFiltered);\n  }, [events, filters]);\n\n  return (\n    <div>\n      {/* Search and Filters */}\n      <EventSearchBar filters={filters} onFiltersChange={setFilters} />\n\n      {/* Events List */}\n      <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n        <EventList events={filteredEvents} />\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnEventScreen;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,OAASC,YAAY,CAAEC,YAAY,CAAEC,gBAAgB,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGzF,KAAM,CAAAC,iBAA2B,CAAGA,CAAA,GAAM,CACxC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAU,EAAE,CAAC,CACjD,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAU,EAAE,CAAC,CACjE,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,CACrCkB,MAAM,CAAE,EAAE,CACVC,aAAa,CAAE,EAAE,CACjBC,cAAc,CAAE,KAAK,CACrBC,IAAI,CAAE,EACR,CAAC,CAAC,CAEFpB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,SAAS,CAAGlB,YAAY,CAAC,CAAC,CAChC,KAAM,CAAAmB,YAAY,CAAGjB,gBAAgB,CAACgB,SAAS,CAAC,CAChDT,SAAS,CAACU,YAAY,CAAC,CACvBR,iBAAiB,CAACQ,YAAY,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CAENtB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,QAAQ,CAAGnB,YAAY,CAACO,MAAM,CAAEI,OAAO,CAAC,CAC9C,KAAM,CAAAS,cAAc,CAAGnB,gBAAgB,CAACkB,QAAQ,CAAC,CACjDT,iBAAiB,CAACU,cAAc,CAAC,CACnC,CAAC,CAAE,CAACb,MAAM,CAAEI,OAAO,CAAC,CAAC,CAErB,mBACEN,KAAA,QAAAgB,QAAA,eAEElB,IAAA,CAACN,cAAc,EAACc,OAAO,CAAEA,OAAQ,CAACW,eAAe,CAAEV,UAAW,CAAE,CAAC,cAGjET,IAAA,QAAKoB,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAJ,QAAA,cAClDlB,IAAA,CAACL,SAAS,EAACS,MAAM,CAAEE,cAAe,CAAE,CAAC,CAClC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}