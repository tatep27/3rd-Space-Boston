{"ast":null,"code":"var _jsxFileName = \"/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindAnEventScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EventSearchBar from '../components/EventSearchBar';\nimport EventList from '../components/EventList';\nimport { getAllEvents, filterEvents, sortEventsByDate } from '../services/eventsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindAnEventScreen = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [filters, setFilters] = useState({\n    search: '',\n    communityType: '',\n    isOpenToPublic: false,\n    cost: ''\n  });\n  useEffect(() => {\n    const allEvents = getAllEvents();\n    const sortedEvents = sortEventsByDate(allEvents);\n    setEvents(sortedEvents);\n    setFilteredEvents(sortedEvents);\n  }, []);\n  useEffect(() => {\n    const filtered = filterEvents(events, filters);\n    const sortedFiltered = sortEventsByDate(filtered);\n    setFilteredEvents(sortedFiltered);\n  }, [events, filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EventSearchBar, {\n      filters: filters,\n      onFiltersChange: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '800px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(EventList, {\n        events: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(FindAnEventScreen, \"zxoy2UJNrz4nJ+yQYbqWnCDoUj4=\");\n_c = FindAnEventScreen;\nexport default FindAnEventScreen;\nvar _c;\n$RefreshReg$(_c, \"FindAnEventScreen\");","map":{"version":3,"names":["React","useState","useEffect","EventSearchBar","EventList","getAllEvents","filterEvents","sortEventsByDate","jsxDEV","_jsxDEV","FindAnEventScreen","_s","events","setEvents","filteredEvents","setFilteredEvents","filters","setFilters","search","communityType","isOpenToPublic","cost","allEvents","sortedEvents","filtered","sortedFiltered","children","onFiltersChange","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","_c","$RefreshReg$"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindAnEventScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EventSearchBar from '../components/EventSearchBar';\nimport EventList from '../components/EventList';\nimport { getAllEvents, filterEvents, sortEventsByDate } from '../services/eventsService';\nimport { Event } from '../types';\n\nconst FindAnEventScreen: React.FC = () => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [filteredEvents, setFilteredEvents] = useState<Event[]>([]);\n  const [filters, setFilters] = useState({\n    search: '',\n    communityType: '',\n    isOpenToPublic: false,\n    cost: '',\n  });\n\n  useEffect(() => {\n    const allEvents = getAllEvents();\n    const sortedEvents = sortEventsByDate(allEvents);\n    setEvents(sortedEvents);\n    setFilteredEvents(sortedEvents);\n  }, []);\n\n  useEffect(() => {\n    const filtered = filterEvents(events, filters);\n    const sortedFiltered = sortEventsByDate(filtered);\n    setFilteredEvents(sortedFiltered);\n  }, [events, filters]);\n\n  return (\n    <div>\n      {/* Search and Filters */}\n      <EventSearchBar filters={filters} onFiltersChange={setFilters} />\n\n      {/* Events List */}\n      <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n        <EventList events={filteredEvents} />\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnEventScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,YAAY,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzF,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAU,EAAE,CAAC;EACjE,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC;IACrCiB,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,KAAK;IACrBC,IAAI,EAAE;EACR,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAGjB,YAAY,CAAC,CAAC;IAChC,MAAMkB,YAAY,GAAGhB,gBAAgB,CAACe,SAAS,CAAC;IAChDT,SAAS,CAACU,YAAY,CAAC;IACvBR,iBAAiB,CAACQ,YAAY,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,MAAMsB,QAAQ,GAAGlB,YAAY,CAACM,MAAM,EAAEI,OAAO,CAAC;IAC9C,MAAMS,cAAc,GAAGlB,gBAAgB,CAACiB,QAAQ,CAAC;IACjDT,iBAAiB,CAACU,cAAc,CAAC;EACnC,CAAC,EAAE,CAACb,MAAM,EAAEI,OAAO,CAAC,CAAC;EAErB,oBACEP,OAAA;IAAAiB,QAAA,gBAEEjB,OAAA,CAACN,cAAc;MAACa,OAAO,EAAEA,OAAQ;MAACW,eAAe,EAAEV;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGjEtB,OAAA;MAAKuB,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAR,QAAA,eAClDjB,OAAA,CAACL,SAAS;QAACQ,MAAM,EAAEE;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlCID,iBAA2B;AAAAyB,EAAA,GAA3BzB,iBAA2B;AAoCjC,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}