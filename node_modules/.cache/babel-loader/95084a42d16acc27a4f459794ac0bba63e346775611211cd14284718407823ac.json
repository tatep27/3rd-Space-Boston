{"ast":null,"code":"import React,{useState,useEffect}from'react';import CommunityMapView from'../components/CommunityMapView';import CommunitySearchBar from'../components/CommunitySearchBar';import CommunityList from'../components/CommunityList';import{getAllCommunities,filterCommunities}from'../services/communitiesService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FindACommunityScreen=()=>{const[communities,setCommunities]=useState([]);const[filteredCommunities,setFilteredCommunities]=useState([]);const[selectedCommunity,setSelectedCommunity]=useState(null);const[filters,setFilters]=useState({search:'',type:'',isOpenToNewMembers:false});useEffect(()=>{const allCommunities=getAllCommunities();setCommunities(allCommunities);setFilteredCommunities(allCommunities);},[]);useEffect(()=>{const filtered=filterCommunities(communities,filters);setFilteredCommunities(filtered);},[communities,filters]);const handleCommunitySelect=community=>{setSelectedCommunity(community);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CommunitySearchBar,{filters:filters,onFiltersChange:setFilters}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 400px',gap:'24px',alignItems:'start'},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CommunityMapView,{communities:filteredCommunities,selectedCommunity:selectedCommunity,onCommunitySelect:handleCommunitySelect})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CommunityList,{communities:filteredCommunities,selectedCommunity:selectedCommunity,onCommunitySelect:handleCommunitySelect})})]})]});};export default FindACommunityScreen;","map":{"version":3,"names":["React","useState","useEffect","CommunityMapView","CommunitySearchBar","CommunityList","getAllCommunities","filterCommunities","jsx","_jsx","jsxs","_jsxs","FindACommunityScreen","communities","setCommunities","filteredCommunities","setFilteredCommunities","selectedCommunity","setSelectedCommunity","filters","setFilters","search","type","isOpenToNewMembers","allCommunities","filtered","handleCommunitySelect","community","children","onFiltersChange","style","display","gridTemplateColumns","gap","alignItems","onCommunitySelect"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/screens/FindACommunityScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CommunityMapView from '../components/CommunityMapView';\nimport CommunityCard from '../components/CommunityCard';\nimport CommunitySearchBar from '../components/CommunitySearchBar';\nimport CommunityList from '../components/CommunityList';\nimport { getAllCommunities, filterCommunities } from '../services/communitiesService';\nimport { Community } from '../types';\n\nconst FindACommunityScreen: React.FC = () => {\n  const [communities, setCommunities] = useState<Community[]>([]);\n  const [filteredCommunities, setFilteredCommunities] = useState<Community[]>([]);\n  const [selectedCommunity, setSelectedCommunity] = useState<Community | null>(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: '',\n    isOpenToNewMembers: false,\n  });\n\n  useEffect(() => {\n    const allCommunities = getAllCommunities();\n    setCommunities(allCommunities);\n    setFilteredCommunities(allCommunities);\n  }, []);\n\n  useEffect(() => {\n    const filtered = filterCommunities(communities, filters);\n    setFilteredCommunities(filtered);\n  }, [communities, filters]);\n\n  const handleCommunitySelect = (community: Community) => {\n    setSelectedCommunity(community);\n  };\n\n  return (\n    <div>\n      {/* Search and Filters */}\n        <CommunitySearchBar filters={filters} onFiltersChange={setFilters} />\n\n        {/* Main Content */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: '1fr 400px',\n          gap: '24px',\n          alignItems: 'start',\n        }}>\n          {/* Map */}\n          <div>\n            <CommunityMapView\n              communities={filteredCommunities}\n              selectedCommunity={selectedCommunity}\n              onCommunitySelect={handleCommunitySelect}\n            />\n          </div>\n\n          {/* Community List */}\n          <div>\n            <CommunityList\n              communities={filteredCommunities}\n              selectedCommunity={selectedCommunity}\n              onCommunitySelect={handleCommunitySelect}\n            />\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default FindACommunityScreen;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAE7D,MAAO,CAAAC,kBAAkB,KAAM,kCAAkC,CACjE,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,OAASC,iBAAiB,CAAEC,iBAAiB,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGtF,KAAM,CAAAC,oBAA8B,CAAGA,CAAA,GAAM,CAC3C,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAc,EAAE,CAAC,CAC/D,KAAM,CAACc,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGf,QAAQ,CAAc,EAAE,CAAC,CAC/E,KAAM,CAACgB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGjB,QAAQ,CAAmB,IAAI,CAAC,CAClF,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,CACrCoB,MAAM,CAAE,EAAE,CACVC,IAAI,CAAE,EAAE,CACRC,kBAAkB,CAAE,KACtB,CAAC,CAAC,CAEFrB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,cAAc,CAAGlB,iBAAiB,CAAC,CAAC,CAC1CQ,cAAc,CAACU,cAAc,CAAC,CAC9BR,sBAAsB,CAACQ,cAAc,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAENtB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,QAAQ,CAAGlB,iBAAiB,CAACM,WAAW,CAAEM,OAAO,CAAC,CACxDH,sBAAsB,CAACS,QAAQ,CAAC,CAClC,CAAC,CAAE,CAACZ,WAAW,CAAEM,OAAO,CAAC,CAAC,CAE1B,KAAM,CAAAO,qBAAqB,CAAIC,SAAoB,EAAK,CACtDT,oBAAoB,CAACS,SAAS,CAAC,CACjC,CAAC,CAED,mBACEhB,KAAA,QAAAiB,QAAA,eAEInB,IAAA,CAACL,kBAAkB,EAACe,OAAO,CAAEA,OAAQ,CAACU,eAAe,CAAET,UAAW,CAAE,CAAC,cAGrET,KAAA,QAAKmB,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,mBAAmB,CAAE,WAAW,CAChCC,GAAG,CAAE,MAAM,CACXC,UAAU,CAAE,OACd,CAAE,CAAAN,QAAA,eAEAnB,IAAA,QAAAmB,QAAA,cACEnB,IAAA,CAACN,gBAAgB,EACfU,WAAW,CAAEE,mBAAoB,CACjCE,iBAAiB,CAAEA,iBAAkB,CACrCkB,iBAAiB,CAAET,qBAAsB,CAC1C,CAAC,CACC,CAAC,cAGNjB,IAAA,QAAAmB,QAAA,cACEnB,IAAA,CAACJ,aAAa,EACZQ,WAAW,CAAEE,mBAAoB,CACjCE,iBAAiB,CAAEA,iBAAkB,CACrCkB,iBAAiB,CAAET,qBAAsB,CAC1C,CAAC,CACC,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}