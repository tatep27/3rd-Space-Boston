{"ast":null,"code":"import communitiesData from '../data/communities.json';\nexport const getAllCommunities = () => {\n  return communitiesData;\n};\nexport const filterCommunities = (communities, filters) => {\n  return communities.filter(community => {\n    const matchesSearch = !filters.search || community.name.toLowerCase().includes(filters.search.toLowerCase()) || community.description.toLowerCase().includes(filters.search.toLowerCase()) || community.spaceName.toLowerCase().includes(filters.search.toLowerCase());\n    const matchesType = !filters.type || community.type === filters.type;\n    const matchesOpenMembers = !filters.isOpenToNewMembers || community.isOpenToNewMembers;\n    return matchesSearch && matchesType && matchesOpenMembers;\n  });\n};\nexport const getCommunityById = id => {\n  return communitiesData.find(community => community.id === id);\n};","map":{"version":3,"names":["communitiesData","getAllCommunities","filterCommunities","communities","filters","filter","community","matchesSearch","search","name","toLowerCase","includes","description","spaceName","matchesType","type","matchesOpenMembers","isOpenToNewMembers","getCommunityById","id","find"],"sources":["/Users/tatepark/Projects/community_project/community_project_MVP0/src/services/communitiesService.ts"],"sourcesContent":["import communitiesData from '../data/communities.json';\nimport { Community } from '../types';\n\nexport const getAllCommunities = (): Community[] => {\n  return communitiesData as Community[];\n};\n\nexport const filterCommunities = (communities: Community[], filters: {\n  search: string;\n  type: string;\n  isOpenToNewMembers: boolean;\n}): Community[] => {\n  return communities.filter(community => {\n    const matchesSearch = !filters.search || \n      community.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n      community.description.toLowerCase().includes(filters.search.toLowerCase()) ||\n      community.spaceName.toLowerCase().includes(filters.search.toLowerCase());\n    \n    const matchesType = !filters.type || community.type === filters.type;\n    \n    const matchesOpenMembers = !filters.isOpenToNewMembers || community.isOpenToNewMembers;\n    \n    return matchesSearch && matchesType && matchesOpenMembers;\n  });\n};\n\nexport const getCommunityById = (id: number): Community | undefined => {\n  return communitiesData.find(community => community.id === id) as Community;\n};\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,0BAA0B;AAGtD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAmB;EAClD,OAAOD,eAAe;AACxB,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAGA,CAACC,WAAwB,EAAEC,OAI3D,KAAkB;EACjB,OAAOD,WAAW,CAACE,MAAM,CAACC,SAAS,IAAI;IACrC,MAAMC,aAAa,GAAG,CAACH,OAAO,CAACI,MAAM,IACnCF,SAAS,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,IACnEJ,SAAS,CAACM,WAAW,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,IAC1EJ,SAAS,CAACO,SAAS,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACI,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC;IAE1E,MAAMI,WAAW,GAAG,CAACV,OAAO,CAACW,IAAI,IAAIT,SAAS,CAACS,IAAI,KAAKX,OAAO,CAACW,IAAI;IAEpE,MAAMC,kBAAkB,GAAG,CAACZ,OAAO,CAACa,kBAAkB,IAAIX,SAAS,CAACW,kBAAkB;IAEtF,OAAOV,aAAa,IAAIO,WAAW,IAAIE,kBAAkB;EAC3D,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAIC,EAAU,IAA4B;EACrE,OAAOnB,eAAe,CAACoB,IAAI,CAACd,SAAS,IAAIA,SAAS,CAACa,EAAE,KAAKA,EAAE,CAAC;AAC/D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}